version: '3.8'

services:
  neo-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: neo-n3-mcp:latest
    container_name: neo-n3-mcp-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Network Configuration
      - NEO_NETWORK=mainnet
      - NEO_MAINNET_RPC=https://mainnet1.neo.coz.io:443
      - NEO_TESTNET_RPC=https://testnet1.neo.coz.io:443
      
      # Rate Limiting
      - RATE_LIMITING_ENABLED=true
      - MAX_REQUESTS_PER_MINUTE=60
      - MAX_REQUESTS_PER_HOUR=1000
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FILE=/app/logs/neo-mcp.log
      - LOG_CONSOLE=true
      
      # Application
      - NODE_ENV=production
      - PORT=3000
    volumes:
      # Persistent data
      - neo-mcp-logs:/app/logs
      - neo-mcp-wallets:/app/wallets
      - neo-mcp-config:/app/config
      
      # Optional: Mount custom config
      # - ./config:/app/config:ro
    networks:
      - neo-mcp-network
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: neo-mcp-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - neo-mcp-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: neo-mcp-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - neo-mcp-network
    profiles:
      - monitoring

volumes:
  neo-mcp-logs:
    driver: local
  neo-mcp-wallets:
    driver: local
  neo-mcp-config:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  neo-mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16